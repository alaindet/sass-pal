@import 'true';
@import 'sass-pal';

$tests: (
  (
    'given': (true, true),
    'expected': (
      "a" "b" "c" "d" "e" "f" "g" "h" "i" "j"
      "k" "l" "m" "n" "o" "p" "q" "r" "s" "t"
      "u" "v" "w" "x" "y" "z" "A" "B" "C" "D"
      "E" "F" "G" "H" "I" "J" "K" "L" "M" "N"
      "O" "P" "Q" "R" "S" "T" "U" "V" "W" "X"
      "Y" "Z"
    )
  ),
  (
    'given': (true, false),
    'expected': (
      "a" "b" "c" "d" "e" "f" "g" "h" "i" "j"
      "k" "l" "m" "n" "o" "p" "q" "r" "s" "t"
      "u" "v" "w" "x" "y" "z"
    ),
  ),
  (
    'given': (false, true),
    'expected': (
      "A" "B" "C" "D" "E" "F" "G" "H" "I" "J"
      "K" "L" "M" "N" "O" "P" "Q" "R" "S" "T"
      "U" "V" "W" "X" "Y" "Z"
    ),
  ),
  (
    'given': (false, false),
    'expected': (),
  ),
);

@include describe('[Helper Function] pal-string-alphabet') {
  @include it('Get the the alphabet as chars list (lower and upper case)') {

    @each $test in $tests {
      $given: map-get($test, 'given');
      $expected: map-get($test, 'expected');
      $arg1: pal-list-get($given, 1);
      $arg2: pal-list-get($given, 2);
      $assertion: null;
      @if ($arg2 == null) {
        $assertion: pal-string-alphabet($arg1);
      } @else {
        $assertion: pal-string-alphabet($arg1, $arg2);
      }
      @include assert-equal($assertion, $expected);
    }

  }
}
