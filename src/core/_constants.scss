/// Map of all Pal's defaults. These cannot be modified, just patched with custom variables
/// 
/// @type Map
/// @prop {List} constants.builders - List of all Pal's builder mixins
/// @prop {Map} constants.sides - Map of all sides of a rectangle. Key: abbrev, value: list of sides
/// @prop {Map} constants.devices - Map of all devices. Key: name, value: list of (min, max) resolutions
/// @prop {Map} constants.media-query - Map of all media-query related meta data
/// @prop {String} constants.media-query.operator - Default media query operator
/// @prop {Map} constants.media-query.operators - Map of all media query operators. Key: symbol, value: label
$pal-constants: (
  'builders': (
    'border',
    'display',
    'flex',
    'position',
    'size',
    'space',
  ),
  'sides': (
    't': ('top'),
    'r': ('right'),
    'b': ('bottom'),
    'l': ('left'),
    'x': ('top', 'bottom'),
    'y': ('right', 'left'),
    '-t': ('right', 'bottom', 'left'),
    '-r': ('bottom', 'left', 'top'),
    '-b': ('top', 'right', 'left'),
    '-l': ('top', 'right', 'bottom'),
    '*': ('top', 'right', 'bottom', 'left'),
  ),
  'devices': (
    'mobile': (320px, 768px - 0.001px),
    'tablet': (768px, 1024px - 0.001px),
    'desktop': (1024px, 1440px - 0.001px),
    'over': (1440px, 9999px),
  ),
  'media-query': (
    'operator': 'in',
    'operators': (
      '=': 'in',
      '-': 'down',
      '+': 'up',
    ),
  ),
);

// Override with custom values
@if (variable-exists('pal-overrides')) {
  @each $key, $value in $pal-overrides {
    @if (map-get($pal-constants, $key) == null) {
      $new-value: (#{$key}: $value);
      $pal-constants: map-merge($pal-constants, $new-value);
    }
  }
}
