/// Parses any sides combination as a string to the proper list of sides.
/// Always returns a list even for one side. Input strings are words composed of the letters
/// 
/// - `t` (top)
/// - `r` (right)
/// - `b` (bottom)
/// - `l` (left)
/// 
/// Special modifiers are
/// 
/// - `*` is a bypass for all sides
/// - `^` or `-` negates a side, ex.: `^t`: (right, bottom, left)
/// 
/// @access public
/// @group core-functions
/// @author Alain D'Ettorre <alain.det@gmail.com>
/// @require {function} pal-get
///
/// @example scss
///   pal-parse-sides('b') // ('bottom')
///   pal-parse-sides('tr') // ('top', 'right')
///   pal-parse-sides('*') // ('top', 'right', 'bottom', 'left')
///   pal-parse-sides('-t') // ('right', 'bottom', 'left')
///   pal-parse-sides('^t') // ('right', 'bottom', 'left')
///
/// @param {String} $input
/// @return {List} List of sides
///
@function pal-parse-sides($input)
{
  $sides: pal-get('pal.sides');
  $output: map-get($sides, $input);

  @if ($output != null) {
    @return $output;
  }

  // Build the custom sides list, like 'rb': ('right', 'bottom')
  $output: ();

  @for $i from 1 through str-length($input) {
    $char: str-slice($input, $i, $i);
    $label: map-get($sides, $char);
    $output: append($output, $label, $separator: 'comma');
  }

  @return $output;
}
