/// The entry point of the whole Sass Pal system. **Utility maps** have builder
/// mixin names as keys and actual instructions as values (whose type depends on
/// the builder). You can provide a more complex map to scope utility maps on
/// specific devices, so that keys are **device queries** and values are
/// request maps
///
/// @access public
/// @group core
/// @author Alain D'Ettorre <alain.det@gmail.com>
/// @require {function} _pal-has-any-device-query
/// @require {function} _pal-group-by-device-query
/// @require {function} pal-map-get
/// @require {mixin} _pal-builder
/// @require {mixin} pal-media-query
/// @require {mixin} pal-pseudo-class
/// 
/// @example scss
///   .test {
///     @include pal((
///       space: 'm^t3' 'mb4' 'py2' 'px4',
///       size: 'w-1/3' 'h-1/2',
///       position: absolute (2 4),
///       border: 2 #ccc,
///       flex: (
///         main-align: end,
///         cross-align: center,
///       ),
///     ));
///   }
///   // .test {
///   //   margin-right: 1.5rem;
///   //   margin-bottom: 1.5rem;
///   //   margin-left: 1.5rem;
///   //   margin-bottom: 2rem;
///   //   padding-top: 1rem;
///   //   padding-bottom: 1rem;
///   //   padding-right: 2rem;
///   //   padding-left: 2rem;
///   //   width: 33.33333%;
///   //   height: 50%;
///   //   position: absolute;
///   //   top: 1rem;
///   //   bottom: 1rem;
///   //   left: 2rem;
///   //   right: 2rem;
///   //   border: 1rem solid #ccc;
///   //   display: flex;
///   //   justify-content: flex-end;
///   //   align-items: center;
///   // }
/// 
/// @param {Map} $map Can be a *request map* or a map of device-scoped request maps
/// @output A set of rules as described by the passed request map(s)
///
@mixin pal($map)
{
  // Single utility map with no device query
  @if (_pal-has-any-device-query($map) == false) {
    @each $builder-name, $builder-value in $map {
      @include _pal-builder($builder-name, $builder-value);
    }
  }

  // Multiple utility maps grouped by device query
  @else {
    @each $group in _pal-group-by-device-query($map) {

      $device: pal-map-get($group, 'query.device');
      $operator: pal-map-get($group, 'query.operator');
      $request-maps: pal-map-get($group, 'request-maps');

      @include pal-media-query($device, $operator) {
        @each $pseudo-class, $request-map in $request-maps {
          @include pal-pseudo-class($pseudo-class) {
            @each $builder-name, $builder-value in $request-map {
              @include _pal-builder($builder-name, $builder-value);
            }
          }
        }
      }

    }
  }

}
